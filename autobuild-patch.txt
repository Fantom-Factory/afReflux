diff -r 000c73e8ef1e fan/RefluxModule.fan
--- a/fan/RefluxModule.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/RefluxModule.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -65,6 +65,18 @@
 		}
 	}
 
+	@Contribute { serviceType=AutoBuilder# }
+	static Void contributeAutobuilHook(Configuration config) {
+		config["afReflux.eventHub"] = |Scope scope, Obj instance| {
+			type := instance.typeof.toNonNullable
+			if (type == EventHub# || type == EventHubImpl# || type == EventTypes#)
+				return
+			echo("###### $scope  $instance.typeof")
+			eventHub := (EventHub?) scope.serviceById(EventHub#.qname, false)
+			eventHub?.register(instance, false)
+		}
+	}
+
 	@Contribute { serviceType=GlobalCommands# }
 	static Void contributeGlobalCommands(Configuration config) {
 		config["afReflux.cmdNew"]			= config.build(GlobalCommand#, ["afReflux.cmdNew"])
diff -r 000c73e8ef1e fan/internal/Frame.fan
--- a/fan/internal/Frame.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/internal/Frame.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -18,9 +18,6 @@
 		this.icon	= Image(`fan://icons/x32/flux.png`)
 		this.size	= Size(640, 480)
 
-		eventHub	:= (EventHub) scope.serviceById(EventHub#.qname)
-		eventHub.register(this)
-
 		panelTabs[Halign.left]	= scope.build(PanelTabPane#, [false, false])
 		panelTabs[Halign.right]	= scope.build(PanelTabPane#, [false, false])
 		panelTabs[Valign.bottom]= scope.build(PanelTabPane#, [false, true])
diff -r 000c73e8ef1e fan/internal/UriWidget.fan
--- a/fan/internal/UriWidget.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/internal/UriWidget.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -20,10 +20,9 @@
 		}
 	}
 
-	new make(EventHub eventHub, |This|in) {
+	new make(|This|in) {
 		in(this)
 		add(text)
-		eventHub.register(this)
 		onMouseUp.add { this->onViewPopup(it) }
 	}
 	
@@ -124,9 +123,8 @@
 		it.onAction.add { this->onAction(it) }
 	}
 
-	new make(EventHub eventHub, |This|in) {
+	new make(|This|in) {
 		in(this)
-		eventHub.register(this)	
 		content = text
 	}
 	
diff -r 000c73e8ef1e fan/internal/ViewTabPane.fan
--- a/fan/internal/ViewTabPane.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/internal/ViewTabPane.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -14,11 +14,6 @@
 			this.tabPane->tabsValign = reflux.preferences.viewTabsOnTop ? Valign.top : Valign.bottom
 	}
 
-	@PostInjection
-	private Void setup(EventHub eventHub) {
-		eventHub.register(this)
-	}
-
 	View[] dirtyViews() {
 		panelTabs.findAll { ((View) it.panel).isDirty }.map { it.panel }
 	}
diff -r 000c73e8ef1e fan/public/fwt/GlobalCommand.fan
--- a/fan/public/fwt/GlobalCommand.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/fwt/GlobalCommand.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -47,7 +47,6 @@
 class GlobalCommand {
 	@Inject private RefluxIcons		_refluxIcons
 	@Inject private Scope			_scope
-	@Inject private EventHub		_eventHub
 	
 			private Str:|Event?|	_invokers	:= Str:|Event?|[:]
 			private Str:|->Bool|	_enablers	:= Str:|->Bool|[:]
@@ -61,7 +60,6 @@
 	new make(Str baseName, |This|in) {
 		in(this)
 		_baseName = baseName
-		_eventHub.register(this, false)
 
 		podd := this.typeof.pod.name + "."
 		base := baseName.startsWith(podd) ? baseName[podd.size..-1] : baseName
diff -r 000c73e8ef1e fan/public/fwt/Panel.fan
--- a/fan/public/fwt/Panel.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/fwt/Panel.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -65,8 +65,6 @@
 	**   new make(|This| in) : super(in) { ... }
 	new make(|This| in) {
 		in(this)
-		// also see RefluxCommand
-		_setup(eventHub)
 
 		baseName := typeof.name
 		if (baseName.endsWith("Panel"))
@@ -78,12 +76,6 @@
 		this.icon = _icons.get("ico${typeof.name}", false)
 	}
 
-	@PostInjection
-	private Void _setup(EventHub eventHub) {
-		// also see RefluxCommand
-		eventHub.register(this, false)
-	}
-
 	** Is the panel currently the active tab in the tab pane?
 	Bool isActive := false { internal set }
 
diff -r 000c73e8ef1e fan/public/fwt/RefluxCommand.fan
--- a/fan/public/fwt/RefluxCommand.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/fwt/RefluxCommand.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -39,11 +39,6 @@
 		this.onInvoke.add |e| { doInvoke(e) }
 	}
 	
-	@PostInjection
-	private Void _setup(EventHub eventHub) {
-		eventHub.register(this, false)
-	}
-	
 	** Callback for you to override. 
 	** By default this does nothing.
 	virtual Void doInvoke(Event? event) { }
diff -r 000c73e8ef1e fan/public/services/EventHub.fan
--- a/fan/public/services/EventHub.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/services/EventHub.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -40,7 +40,7 @@
 @Js
 internal class EventHubImpl : EventHub {
 	@Inject private EventTypes	eventTypes
-	@Inject private Errors		errors
+	@Inject private |->Errors|	errors
 			private Obj[]		eventSinks	:= [,]
 	
 	private new make(|This| in) {
@@ -74,7 +74,7 @@
 		sinks.each {
 			try	method.callOn(it, args)
 			catch (Err err) {
-				errors.add(err)
+				errors().add(err)
 			}
 		}
 	}
diff -r 000c73e8ef1e fan/public/services/History.fan
--- a/fan/public/services/History.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/services/History.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -39,10 +39,7 @@
 	@Inject	private Scope		scope
 	@Inject	private Reflux		reflux
 
-	new make(EventHub eventHub, |This|in) {
-		in(this)
-		eventHub.register(this)
-	}
+	new make(|This|in) { in(this) }
 	
 	override Void navBackward() {
 		if (!navBackwardEnabled) return
diff -r 000c73e8ef1e fan/public/services/Reflux.fan
--- a/fan/public/services/Reflux.fan	Mon Oct 05 23:17:36 2015 +0100
+++ b/fan/public/services/Reflux.fan	Tue Oct 06 21:00:37 2015 +0100
@@ -93,9 +93,8 @@
 			override View?			activeView
 			override Window			window
 
-	new make(EventHub eventHub, |This| in) { 
+	new make(|This| in) { 
 		in(this)
-		eventHub.register(this)
 		window = scope.build(Frame#, [this])
 	}
 	
